{"ast":null,"code":"var _jsxFileName = \"/home/cytech/web/projetx/src/pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Auth.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [role, setRole] = useState('');\n  const [users, setUsers] = useState([]);\n  const [attente, setAttente] = useState([]);\n\n  // Nouveaux états pour afficher l'email après connexion\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Vérifie si l'utilisateur est connecté\n  const [userEmail, setUserEmail] = useState('');\n  const [loginError, setLoginError] = useState('');\n  useEffect(() => {\n    if (role === 'admin') {\n      //fetchUsersAndAttente();\n      fetchUsers();\n    }\n  }, [role]);\n  const fetchUsers = () => {\n    const adminEmail = 'admin@example.com'; // L'email de l'admin\n\n    console.log(\"📤 Envoi de l'email admin :\", adminEmail); // Affiche l'email envoyé\n\n    const data = new URLSearchParams();\n    data.append('admin_email', adminEmail); // Ajoute l'email dans les données envoyées\n\n    fetch(\"http://localhost:8000/GetUsers.php\", {\n      method: \"POST\",\n      // Méthode POST pour envoyer les données\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\" // Formulaire x-www-form-urlencoded\n      },\n      body: data // Envoi des données avec l'email de l'admin\n    }).then(response => response.json()) // Traite la réponse comme un JSON\n    .then(data => {\n      console.log(\"📥 Réponse brute du serveur:\", data);\n      if (data.users && data.attente) {\n        setUsers(data.users); // Mets à jour la liste des utilisateurs\n        setAttente(data.attente); // Mets à jour la liste des utilisateurs en attente\n      } else {\n        console.error(\"❌ Erreur : Pas de données valides dans la réponse\");\n      }\n    }).catch(error => {\n      console.error(\"❌ Erreur récupération utilisateurs et liste d'attente:\", error);\n    });\n  };\n  const handleMoveToUser = email => {\n    // Demander à l'utilisateur de confirmer l'action\n    if (window.confirm(`Voulez-vous vraiment déplacer ${email} de la liste d'attente vers la liste des utilisateurs ?`)) {\n      // Préparer les données à envoyer\n      const data = new URLSearchParams();\n      data.append('email', email); // L'email de l'utilisateur à déplacer\n      console.log(\"📤 email a transferer:\", email);\n\n      // Effectuer la requête pour déplacer l'utilisateur\n      fetch(\"http://localhost:8000/MoveToUser.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: data\n      }).then(response => response.text()).then(response => {\n        if (response === 'success') {\n          alert(`${email} a été déplacé avec succès vers la liste des utilisateurs.`);\n          // Mettre à jour les listes localement après le déplacement\n          setAttente(attente.filter(user => user.email !== email)); // Enlever de la liste d'attente\n          setUsers([...users, {\n            email,\n            role: 'user'\n          }]); // Ajouter à la liste des utilisateurs\n        } else {\n          alert(\"❌ Une erreur est survenue lors du déplacement.\");\n        }\n      }).catch(error => {\n        console.error(\"❌ Erreur lors du déplacement :\", error);\n      });\n    }\n  };\n  const handleDeleteUser = targetEmail => {\n    if (!window.confirm(`Voulez-vous vraiment supprimer l'utilisateur ${targetEmail} ?`)) {\n      return;\n    }\n    const data = new URLSearchParams();\n    data.append('email', targetEmail);\n    fetch(\"http://localhost:8000/DeleteUser.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: data\n    }).then(response => response.text()).then(data => {\n      if (data === \"success\") {\n        alert(\"Utilisateur supprimé avec succès !\");\n        setUsers(users.filter(user => user.email !== targetEmail)); // Mise à jour dynamique\n      } else {\n        alert(\"❌ Erreur lors de la suppression !\");\n      }\n    }).catch(error => {\n      console.error(\"❌ Erreur suppression utilisateur:\", error);\n    });\n  };\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    // Affichage des valeurs avant l'envoi\n    console.log(\"Données envoyées : \", {\n      email,\n      password\n    });\n\n    // Crée les données à envoyer\n    const data = new URLSearchParams();\n    data.append('email', email);\n    data.append('password', password);\n\n    // recupere des données au serveur PHP\n    fetch(\"http://localhost:8000/LogIn.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: data\n    }).then(response => response.text()) // Lecture de la réponse en texte brut\n    .then(data => {\n      console.log('Réponse du serveur:', data); // Affiche la réponse du serveur\n      if (data.startsWith('success')) {\n        const [, userEmail, userRole] = data.split('|');\n        console.log(\"✅ Email récupéré:\", userEmail);\n        console.log(\"✅ Rôle récupéré:\", userRole);\n        setIsLoggedIn(true);\n        setEmail(userEmail);\n        setUserEmail(userEmail);\n        setRole(userRole);\n        setLoginError(\"\"); // Réinitialiser l'erreur\n      } else {\n        setLoginError(data); // Afficher l'erreur reçue\n      }\n    }).catch(error => {\n      console.error(\"Erreur:\", error);\n    });\n  };\n\n  /*\n  const handleChangePasswordSubmit = (e) => {\n    e.preventDefault();\n    if (!userEmail || !role) {\n      console.error(\"Erreur : Email ou rôle manquant !\");\n      return;\n    }\n       // Crée les données à envoyer pour changer le mot de passe\n    const data = new URLSearchParams();\n    data.append('userEmail', userEmail);\n    data.append('newPassword', newPassword);\n    data.append('role', role);\n       fetch(\"http://localhost:8000/ChangePassword.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: data,\n    })\n      .then((response) => response.text())\n      .then((data) => {\n      })\n      .catch((error) => {\n        console.error(\"Erreur:\", error);\n      });\n  };\n  */\n  const [passwordMessage, setPasswordMessage] = useState('');\n  const handleChangePasswordSubmit = e => {\n    e.preventDefault();\n    if (!userEmail || !role) {\n      console.error(\"Erreur : Email ou rôle manquant !\");\n      setPasswordMessage(\"❌ Une erreur est survenue.\");\n      return;\n    }\n    if (!newPassword.trim()) {\n      setPasswordMessage(\"❌ Le mot de passe ne peut pas être vide.\");\n      return;\n    }\n    console.log(\"🔍 Données envoyées :\", {\n      userEmail,\n      newPassword\n    });\n    // Création des données à envoyer\n    const data = new URLSearchParams();\n    data.append('userEmail', userEmail);\n    data.append('newPassword', newPassword);\n    data.append('role', role);\n    fetch(\"http://localhost:8000/ChangePassword.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: data\n    }).then(response => response.text()).then(serverMessage => {\n      console.log(\"Réponse du serveur :\", serverMessage);\n      if (serverMessage === \"success\") {\n        setPasswordMessage(\"✅ Mot de passe changé avec succès !\");\n      } else {\n        setPasswordMessage(\"❌ \" + serverMessage);\n      }\n    }).catch(error => {\n      console.error(\"Erreur:\", error);\n      setPasswordMessage(\"❌ Une erreur réseau est survenue.\");\n    });\n  };\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLoginSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Mot de passe :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: loginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bienvenue, \", userEmail, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this), role === 'admin' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Liste des utilisateurs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"R\\xF4le\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteUser(user.email),\n                  children: \"\\uD83D\\uDDD1 Supprimer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Liste d'attente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"R\\xF4le\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: attente.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleMoveToUser(user.email),\n                  children: \"Passer \\xE0 utilisateur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          style: {\n            marginTop: '10px'\n          },\n          children: \"\\u2B05 Retour \\xE0 l'accueil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifier votre mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleChangePasswordSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nouveau mot de passe :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Modifier le mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }, this), passwordMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: passwordMessage.startsWith('✅') ? 'green' : 'red'\n          },\n          children: passwordMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          style: {\n            marginTop: '10px'\n          },\n          children: \"\\u2B05 Retour \\xE0 l'accueil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"iH6azuYA8J4EqGIzcnkU8TFdfKY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","newPassword","setNewPassword","role","setRole","users","setUsers","attente","setAttente","isLoggedIn","setIsLoggedIn","userEmail","setUserEmail","loginError","setLoginError","fetchUsers","adminEmail","console","log","data","URLSearchParams","append","fetch","method","headers","body","then","response","json","error","catch","handleMoveToUser","window","confirm","text","alert","filter","user","handleDeleteUser","targetEmail","handleLoginSubmit","e","preventDefault","startsWith","userRole","split","passwordMessage","setPasswordMessage","handleChangePasswordSubmit","trim","serverMessage","navigate","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","style","color","border","map","index","onClick","marginTop","_c","$RefreshReg$"],"sources":["/home/cytech/web/projetx/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/Auth.css';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [role, setRole] = useState('');\n    const [users, setUsers] = useState([]);\n    const [attente, setAttente] = useState([]);\n \n    // Nouveaux états pour afficher l'email après connexion\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Vérifie si l'utilisateur est connecté\n    const [userEmail, setUserEmail] = useState('');\n    const [loginError, setLoginError] = useState(''); \n  \n    useEffect(() => {\n      if (role === 'admin') {\n        //fetchUsersAndAttente();\n        fetchUsers();\n      }\n    }, [role]);\n    const fetchUsers = () => {\n      const adminEmail = 'admin@example.com';  // L'email de l'admin\n    \n      console.log(\"📤 Envoi de l'email admin :\", adminEmail);  // Affiche l'email envoyé\n    \n      const data = new URLSearchParams();\n      data.append('admin_email', adminEmail);  // Ajoute l'email dans les données envoyées\n    \n      fetch(\"http://localhost:8000/GetUsers.php\", {\n        method: \"POST\",  // Méthode POST pour envoyer les données\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"  // Formulaire x-www-form-urlencoded\n        },\n        body: data  // Envoi des données avec l'email de l'admin\n      })\n      .then(response => response.json())  // Traite la réponse comme un JSON\n      .then(data => {\n        console.log(\"📥 Réponse brute du serveur:\", data);\n\n        if (data.users && data.attente) {\n          setUsers(data.users);  // Mets à jour la liste des utilisateurs\n          setAttente(data.attente);  // Mets à jour la liste des utilisateurs en attente\n        } else {\n          console.error(\"❌ Erreur : Pas de données valides dans la réponse\");\n        }\n      })\n      .catch(error => {\n        console.error(\"❌ Erreur récupération utilisateurs et liste d'attente:\", error);\n      });\n    };\n    \n\n\n\n    const handleMoveToUser = (email) => {\n      // Demander à l'utilisateur de confirmer l'action\n      if (window.confirm(`Voulez-vous vraiment déplacer ${email} de la liste d'attente vers la liste des utilisateurs ?`)) {\n        \n        // Préparer les données à envoyer\n        const data = new URLSearchParams();\n        data.append('email', email); // L'email de l'utilisateur à déplacer\n        console.log(\"📤 email a transferer:\",email); \n    \n        // Effectuer la requête pour déplacer l'utilisateur\n        fetch(\"http://localhost:8000/MoveToUser.php\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: data\n        })\n        .then(response => response.text())\n        .then(response => {\n          if (response === 'success') {\n            alert(`${email} a été déplacé avec succès vers la liste des utilisateurs.`);\n            // Mettre à jour les listes localement après le déplacement\n            setAttente(attente.filter(user => user.email !== email)); // Enlever de la liste d'attente\n            setUsers([...users, { email, role: 'user' }]); // Ajouter à la liste des utilisateurs\n          } else {\n            alert(\"❌ Une erreur est survenue lors du déplacement.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"❌ Erreur lors du déplacement :\", error);\n        });\n      }\n    };\n\n\n\n    const handleDeleteUser = (targetEmail) => {\n      if (!window.confirm(`Voulez-vous vraiment supprimer l'utilisateur ${targetEmail} ?`)) {\n          return;\n      }\n  \n      const data = new URLSearchParams();\n      data.append('email', targetEmail);\n  \n      fetch(\"http://localhost:8000/DeleteUser.php\", {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          body: data,\n      })\n      .then(response => response.text())\n      .then((data) => {\n          if (data === \"success\") {\n              alert(\"Utilisateur supprimé avec succès !\");\n              setUsers(users.filter(user => user.email !== targetEmail)); // Mise à jour dynamique\n          } else {\n              alert(\"❌ Erreur lors de la suppression !\");\n          }\n      })\n      .catch((error) => {\n          console.error(\"❌ Erreur suppression utilisateur:\", error);\n      });\n    };\n\n\n\n    const handleLoginSubmit = (e) => {\n      e.preventDefault();\n    // Affichage des valeurs avant l'envoi\n    console.log(\"Données envoyées : \", {email, password });\n  \n      // Crée les données à envoyer\n      const data = new URLSearchParams();\n      data.append('email', email);\n      data.append('password', password);\n      \n  \n      // recupere des données au serveur PHP\n      fetch(\"http://localhost:8000/LogIn.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: data,\n      })\n      .then((response) => response.text())  // Lecture de la réponse en texte brut\n      .then((data) => {\n        console.log('Réponse du serveur:', data);  // Affiche la réponse du serveur\n        if (data.startsWith('success')) {\n          const [, userEmail, userRole] = data.split('|');\n          console.log(\"✅ Email récupéré:\", userEmail);\n          console.log(\"✅ Rôle récupéré:\", userRole);\n          setIsLoggedIn(true);\n          setEmail(userEmail);\n          setUserEmail(userEmail);\n          setRole(userRole);\n          setLoginError(\"\");  // Réinitialiser l'erreur\n        } else {\n          setLoginError(data);  // Afficher l'erreur reçue\n        }\n      })\n      .catch((error) => {\n        console.error(\"Erreur:\", error);\n      });\n    };\n\n\n    /*\n    const handleChangePasswordSubmit = (e) => {\n      e.preventDefault();\n      if (!userEmail || !role) {\n        console.error(\"Erreur : Email ou rôle manquant !\");\n        return;\n      }\n  \n      // Crée les données à envoyer pour changer le mot de passe\n      const data = new URLSearchParams();\n      data.append('userEmail', userEmail);\n      data.append('newPassword', newPassword);\n      data.append('role', role);\n  \n      fetch(\"http://localhost:8000/ChangePassword.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: data,\n      })\n        .then((response) => response.text())\n        .then((data) => {\n        })\n        .catch((error) => {\n          console.error(\"Erreur:\", error);\n        });\n    };\n    */\n    const [passwordMessage, setPasswordMessage] = useState('');\n\n    const handleChangePasswordSubmit = (e) => {\n        e.preventDefault();\n      \n        if (!userEmail || !role) {\n            console.error(\"Erreur : Email ou rôle manquant !\");\n            setPasswordMessage(\"❌ Une erreur est survenue.\");\n            return;\n        }\n    \n        if (!newPassword.trim()) {\n            setPasswordMessage(\"❌ Le mot de passe ne peut pas être vide.\");\n            return;\n        }\n        console.log(\"🔍 Données envoyées :\", { userEmail, newPassword });\n        // Création des données à envoyer\n        const data = new URLSearchParams();\n        data.append('userEmail', userEmail);\n        data.append('newPassword', newPassword);\n        data.append('role', role);\n    \n        fetch(\"http://localhost:8000/ChangePassword.php\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            body: data,\n        })\n        .then(response => response.text()) \n        .then((serverMessage) => {\n            console.log(\"Réponse du serveur :\", serverMessage);\n    \n            if (serverMessage === \"success\") {\n                setPasswordMessage(\"✅ Mot de passe changé avec succès !\");\n            } else {\n                setPasswordMessage(\"❌ \" + serverMessage);\n            }\n        })\n        .catch((error) => {\n            console.error(\"Erreur:\", error);\n            setPasswordMessage(\"❌ Une erreur réseau est survenue.\");\n        });\n    };\n\n    const navigate = useNavigate();\n\n    \n\n   \n    return (\n      <div>\n        {!isLoggedIn ? (\n          <form onSubmit={handleLoginSubmit}>\n            <label>Email :\n              <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n            </label>\n            <br />\n            <label>Mot de passe :\n              <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            </label>\n            <br />\n            {loginError && <p style={{ color: 'red' }}>{loginError}</p>}\n            <button type=\"submit\">Se connecter</button>\n          </form>\n        ) : (\n          <div>\n            <h2>Bienvenue, {userEmail}!</h2>\n            {role === 'admin' ? (\n              <div>\n                <h3>Liste des utilisateurs</h3>\n                <table border=\"1\">\n                  <thead>\n                    <tr>\n                      <th>Email</th>\n                      <th>Rôle</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {users.map((user, index) => (\n                      <tr key={index}>\n                        <td>{user.email}</td>\n                        <td>{user.role}</td>\n                        <td>\n                          <button onClick={() => handleDeleteUser(user.email)}>🗑 Supprimer</button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n    \n                <h3>Liste d'attente</h3>\n                <table border=\"1\">\n                  <thead>\n                    <tr>\n                      <th>Email</th>\n                      <th>Rôle</th>\n                      <th>Type</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {attente.map((user, index) => (\n                      <tr key={index}>\n                        <td>{user.email}</td>\n                        <td>{user.role}</td>\n                        <td>{user.type}</td>\n                        <td>\n                          <button onClick={() => handleMoveToUser(user.email)}>Passer à utilisateur</button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                 {/* Nouveau bouton pour retourner à l'accueil */}\n                  <button onClick={() => navigate('/')} style={{ marginTop: '10px' }}>\n                      ⬅ Retour à l'accueil\n                  </button>\n              </div>\n            ) : (\n              <div>\n                <h3>Modifier votre mot de passe</h3>\n                <form onSubmit={handleChangePasswordSubmit}>\n                  <label>Nouveau mot de passe :\n                    <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\n                  </label>\n                  <br />\n                  <button type=\"submit\">Modifier le mot de passe</button>\n                </form>\n                {/* ✅ Affichage du message de succès ou d'erreur */}\n                    {passwordMessage && (\n                    <p style={{ color: passwordMessage.startsWith('✅') ? 'green' : 'red' }}>\n                        {passwordMessage}\n                    </p>\n                    )}\n                {/* Nouveau bouton pour retourner à l'accueil */}\n                <button onClick={() => navigate('/')} style={{ marginTop: '10px' }}>\n                    ⬅ Retour à l'accueil\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n    \n}\n              \n\n\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}