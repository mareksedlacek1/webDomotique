{"ast":null,"code":"var _jsxFileName = \"/home/cytech/web51/frontend/src/pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import '../styles/Auth.css';\nimport '../styles/LogIn.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { mockData } from '../data/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [role, setRole] = useState('');\n  const [users, setUsers] = useState([]);\n  const [attente, setAttente] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const [selectedDevices, setSelectedDevices] = useState(JSON.parse(localStorage.getItem('selectedDevices')) || [] // Récupérer les appareils sélectionnés depuis localStorage\n  );\n\n  // Vérifier l'état de la session au démarrage\n  useEffect(() => {\n    fetch('http://localhost:8000/checkSession.php', {\n      method: 'GET',\n      credentials: 'include' // inclure les cookies pour vérifier la session\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        setIsLoggedIn(true);\n        setUserEmail(data.email);\n        setRole(data.role);\n      }\n    }).catch(error => {\n      console.error('Erreur lors de la vérification de la session:', error);\n    });\n  }, []);\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    // Affichage des valeurs avant l'envoi\n    console.log(\"Données envoyées : \", {\n      email,\n      password\n    });\n\n    // Crée les données à envoyer\n    const data = new URLSearchParams();\n    data.append('email', email);\n    data.append('password', password);\n\n    // recupere des données au serveur PHP\n    fetch(\"http://localhost:8000/LogIn.php\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: data\n    }).then(response => response.text()) // Lecture de la réponse en texte brut\n    .then(data => {\n      console.log('Réponse du serveur:', data); // Affiche la réponse du serveur\n      if (data.startsWith('success')) {\n        const [, userEmail, userRole] = data.split('|');\n        console.log(\" Email récupéré:\", userEmail);\n        console.log(\"Rôle récupéré:\", userRole);\n        setIsLoggedIn(true);\n        setEmail(userEmail);\n        setUserEmail(userEmail);\n        setRole(userRole);\n        setLoginError(\"\"); // Réinitialiser l'erreur\n      } else {\n        setLoginError(data); // Afficher l'erreur reçue\n      }\n    }).catch(error => {\n      console.error(\"Erreur:\", error);\n    });\n  };\n  const handleLogout = () => {\n    fetch('http://localhost:8000/logout.php', {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        console.log('Déconnexion réussie:', data.message); // Affiche dans la console\n        alert(data.message); // Affiche un message à l'utilisateur\n        setIsLoggedIn(false);\n        setUserEmail('');\n        navigate('/');\n      } else {\n        console.error('Erreur de déconnexion:', data.message);\n      }\n    }).catch(error => {\n      console.error('Erreur réseau:', error);\n    });\n  };\n  const [passwordMessage, setPasswordMessage] = useState('');\n  const handleChangePasswordSubmit = e => {\n    e.preventDefault();\n    if (!userEmail || !role) {\n      console.error(\"Erreur : Email ou rôle manquant !\");\n      setPasswordMessage(\" Une erreur est survenue.\");\n      return;\n    }\n    if (!newPassword.trim()) {\n      setPasswordMessage(\" Le mot de passe ne peut pas être vide.\");\n      return;\n    }\n    console.log(\"🔍 Données envoyées :\", {\n      userEmail,\n      newPassword\n    });\n    // Création des données à envoyer\n    const data = new URLSearchParams();\n    data.append('userEmail', userEmail);\n    data.append('newPassword', newPassword);\n    data.append('role', role);\n    fetch(\"http://localhost:8000/ChangePassword.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: data\n    }).then(response => response.text()).then(serverMessage => {\n      console.log(\"Réponse du serveur :\", serverMessage);\n      if (serverMessage === \"success\") {\n        setPasswordMessage(\" Mot de passe changé avec succès !\");\n      } else {\n        setPasswordMessage(\"\" + serverMessage);\n      }\n    }).catch(error => {\n      console.error(\"Erreur:\", error);\n      setPasswordMessage(\" Une erreur réseau est survenue.\");\n    });\n  };\n  const navigate = useNavigate();\n  const handleDeleteUser = targetEmail => {\n    if (!window.confirm(`Voulez-vous vraiment supprimer l'utilisateur ${targetEmail} ?`)) {\n      return;\n    }\n    const data = new URLSearchParams();\n    data.append('email', targetEmail);\n    fetch(\"http://localhost:8000/DeleteUser.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: data\n    }).then(response => response.text()).then(data => {\n      if (data === \"success\") {\n        alert(\"Utilisateur supprimé avec succès !\");\n        setUsers(users.filter(user => user.email !== targetEmail)); // Mise à jour dynamique\n      } else {\n        alert(\" Erreur lors de la suppression !\");\n      }\n    }).catch(error => {\n      console.error(\" Erreur suppression utilisateur:\", error);\n    });\n  };\n  useEffect(() => {\n    if (isLoggedIn && role === 'admin') {\n      fetchUsers(); // Appel uniquement si l'utilisateur est connecté et admin\n    }\n  }, [isLoggedIn, role]);\n  const fetchUsers = () => {\n    const adminEmail = 'admin@example.com'; // L'email de l'admin\n\n    console.log(\" Envoi de l'email admin :\", adminEmail); // Affiche l'email envoyé\n\n    const data = new URLSearchParams();\n    data.append('admin_email', adminEmail); // Ajoute l'email dans les données envoyées\n\n    fetch(\"http://localhost:8000/GetUsers.php\", {\n      method: \"POST\",\n      // Méthode POST pour envoyer les données\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\" // Formulaire x-www-form-urlencoded\n      },\n      body: data // Envoi des données avec l'email de l'admin\n    }).then(response => response.json()) // Traite la réponse comme un JSON\n    .then(data => {\n      console.log(\" Réponse brute du serveur:\", data);\n      if (data.users && data.attente) {\n        setUsers(data.users); // Mets à jour la liste des utilisateurs\n        setAttente(data.attente); // Mets à jour la liste des utilisateurs en attente\n      } else {\n        console.error(\" Erreur : Pas de données valides dans la réponse\");\n      }\n    }).catch(error => {\n      console.error(\" Erreur récupération utilisateurs et liste d'attente:\", error);\n    });\n  };\n  const handleMoveToUser = email => {\n    // Demander à l'utilisateur de confirmer l'action\n    if (window.confirm(`Voulez-vous vraiment déplacer ${email} de la liste d'attente vers la liste des utilisateurs ?`)) {\n      // Préparer les données à envoyer\n      const data = new URLSearchParams();\n      data.append('email', email); // L'email de l'utilisateur à déplacer\n      console.log(\"email a transferer:\", email);\n\n      // Effectuer la requête pour déplacer l'utilisateur\n      fetch(\"http://localhost:8000/MoveToUser.php\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: data\n      }).then(response => response.text()).then(response => {\n        if (response === 'success') {\n          alert(`${email} a été déplacé avec succès vers la liste des utilisateurs.`);\n          // Mettre à jour les listes localement après le déplacement\n          setAttente(attente.filter(user => user.email !== email)); // Enlever de la liste d'attente\n          setUsers([...users, {\n            email,\n            role: 'user'\n          }]); // Ajouter à la liste des utilisateurs\n        } else {\n          alert(\" Une erreur est survenue lors du déplacement.\");\n        }\n      }).catch(error => {\n        console.error(\" Erreur lors du déplacement :\", error);\n      });\n    }\n  };\n  const handleDeviceSelection = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    setSelectedDevices(prevSelectedDevices => {\n      const updatedDevices = checked ? [...prevSelectedDevices, value] // Ajoute l'appareil si coché\n      : prevSelectedDevices.filter(device => device !== value); // Enlève l'appareil si décoché\n      localStorage.setItem('selectedDevices', JSON.stringify(updatedDevices)); // Sauvegarde dans localStorage\n      return updatedDevices;\n    });\n  };\n  const handleSubmitDevices = () => {\n    navigate('/', {\n      state: {\n        selectedDevices\n      }\n    }); // Passe les appareils sélectionnés à Home\n  };\n  useEffect(() => {\n    if (isLoggedIn && role === 'admin') {\n      fetchMessages(); // Appel pour récupérer les messages\n    }\n  }, [isLoggedIn, role]);\n  const fetchMessages = () => {\n    fetch('http://localhost:8000/GetMessages.php', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(response => response.json()).then(data => {\n      console.log('Messages récupérés:', data);\n      if (data.messages) {\n        setMessages(data.messages); // Met à jour l'état des messages\n      } else {\n        console.error('Erreur lors de la récupération des messages.');\n      }\n    }).catch(error => {\n      console.error('Erreur de récupération des messages:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLoginSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Mot de passe :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: loginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bienvenue, \", userEmail, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this), role === 'admin' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Liste des utilisateurs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"R\\xF4le\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteUser(user.email),\n                  children: \"Supprimer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Liste d'attente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"R\\xF4le\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: attente.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleMoveToUser(user.email),\n                  children: \"Passer \\xE0 utilisateur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Messages des utilisateurs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 21\n          }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            border: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: message.user_email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: message.sent_at\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Aucun message \\xE0 afficher.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"S\\xE9lectionnez des appareils \\xE0 afficher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: mockData.connectedDevices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `device-${device.id}`,\n              value: device.id,\n              checked: selectedDevices.includes(device.id),\n              onChange: handleDeviceSelection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `device-${device.id}`,\n              children: device.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 33\n            }, this)]\n          }, device.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitDevices,\n          style: {\n            marginTop: '20px'\n          },\n          children: \"\\u2B05 Appliquer les modifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          style: {\n            marginTop: '10px'\n          },\n          children: \"\\u2B05 Retour \\xE0 l'accueil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Modifier votre mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleChangePasswordSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nouveau mot de passe :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Modifier le mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }, this), passwordMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: passwordMessage.startsWith('✅') ? 'green' : 'red'\n          },\n          children: passwordMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          style: {\n            marginTop: '10px'\n          },\n          children: \"\\u2B05 Retour \\xE0 l'accueil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Se d\\xE9connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"6Q6a/8NUGo51nHpCdZutmdQbsaE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","mockData","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","newPassword","setNewPassword","role","setRole","users","setUsers","attente","setAttente","messages","setMessages","isLoggedIn","setIsLoggedIn","userEmail","setUserEmail","loginError","setLoginError","selectedDevices","setSelectedDevices","JSON","parse","localStorage","getItem","fetch","method","credentials","then","response","json","data","success","catch","error","console","handleLoginSubmit","e","preventDefault","log","URLSearchParams","append","headers","body","text","startsWith","userRole","split","handleLogout","message","alert","navigate","passwordMessage","setPasswordMessage","handleChangePasswordSubmit","trim","serverMessage","handleDeleteUser","targetEmail","window","confirm","filter","user","fetchUsers","adminEmail","handleMoveToUser","handleDeviceSelection","event","value","checked","target","prevSelectedDevices","updatedDevices","device","setItem","stringify","handleSubmitDevices","state","fetchMessages","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","color","border","map","index","onClick","length","user_email","sent_at","connectedDevices","id","includes","htmlFor","name","marginTop","_c","$RefreshReg$"],"sources":["/home/cytech/web51/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import '../styles/Auth.css';\nimport '../styles/LogIn.css';  \nimport { useNavigate } from \"react-router-dom\";\nimport { mockData } from '../data/mockData';\n\nfunction Login() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [role, setRole] = useState('');\n    const [users, setUsers] = useState([]);\n    const [attente, setAttente] = useState([]);\n    const [messages, setMessages] = useState([]);\n    \n    const [isLoggedIn, setIsLoggedIn] = useState(false); \n    const [userEmail, setUserEmail] = useState('');\n    const [loginError, setLoginError] = useState('');\n    const [selectedDevices, setSelectedDevices] = useState(\n      JSON.parse(localStorage.getItem('selectedDevices')) || []  // Récupérer les appareils sélectionnés depuis localStorage\n    );  \n\n\n  // Vérifier l'état de la session au démarrage\n    useEffect(() => {\n        fetch('http://localhost:8000/checkSession.php', {\n          method: 'GET',\n          credentials: 'include', // inclure les cookies pour vérifier la session\n        })\n          .then(response => response.json())\n          .then(data => {\n            if (data.success) {\n              setIsLoggedIn(true);\n              setUserEmail(data.email); \n              setRole(data.role); \n            }\n          })\n          .catch(error => {\n            console.error('Erreur lors de la vérification de la session:', error);\n          });\n      }, []);\n\n    const handleLoginSubmit = (e) => {\n      e.preventDefault();\n    // Affichage des valeurs avant l'envoi\n    console.log(\"Données envoyées : \", {email, password });\n  \n      // Crée les données à envoyer\n      const data = new URLSearchParams();\n      data.append('email', email);\n      data.append('password', password);\n      \n  \n      // recupere des données au serveur PHP\n      fetch(\"http://localhost:8000/LogIn.php\", {\n        method: \"POST\",\n        credentials: \"include\", \n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: data,\n      })\n      .then((response) => response.text())  // Lecture de la réponse en texte brut\n      .then((data) => {\n        console.log('Réponse du serveur:', data);  // Affiche la réponse du serveur\n        if (data.startsWith('success')) {\n          const [, userEmail, userRole] = data.split('|');\n          console.log(\" Email récupéré:\", userEmail);\n          console.log(\"Rôle récupéré:\", userRole);\n          setIsLoggedIn(true);\n          setEmail(userEmail);\n          setUserEmail(userEmail);\n          setRole(userRole);\n          setLoginError(\"\");  // Réinitialiser l'erreur\n        } else {\n          setLoginError(data);  // Afficher l'erreur reçue\n        }\n      })\n      .catch((error) => {\n        console.error(\"Erreur:\", error);\n      });\n    };\n\n\n\n    const handleLogout = () => {\n      fetch('http://localhost:8000/logout.php', {\n        method: 'GET',\n        credentials: 'include', \n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        }, \n      })\n      .then((response) => response.json()) \n      .then((data) => {\n        if (data.success) {\n          console.log('Déconnexion réussie:', data.message); // Affiche dans la console\n          alert(data.message); // Affiche un message à l'utilisateur\n          setIsLoggedIn(false);\n          setUserEmail('');\n          navigate('/'); \n        } else {\n          console.error('Erreur de déconnexion:', data.message);\n        }\n      })\n      .catch((error) => {\n        console.error('Erreur réseau:', error);\n      });\n    };\n\n\n\n\n\n    const [passwordMessage, setPasswordMessage] = useState('');\n\n    const handleChangePasswordSubmit = (e) => {\n        e.preventDefault();\n      \n        if (!userEmail || !role) {\n            console.error(\"Erreur : Email ou rôle manquant !\");\n            setPasswordMessage(\" Une erreur est survenue.\");\n            return;\n        }\n    \n        if (!newPassword.trim()) {\n            setPasswordMessage(\" Le mot de passe ne peut pas être vide.\");\n            return;\n        }\n        console.log(\"🔍 Données envoyées :\", { userEmail, newPassword });\n        // Création des données à envoyer\n        const data = new URLSearchParams();\n        data.append('userEmail', userEmail);\n        data.append('newPassword', newPassword);\n        data.append('role', role);\n    \n        fetch(\"http://localhost:8000/ChangePassword.php\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            body: data,\n        })\n        .then(response => response.text()) \n        .then((serverMessage) => {\n            console.log(\"Réponse du serveur :\", serverMessage);\n    \n            if (serverMessage === \"success\") {\n                setPasswordMessage(\" Mot de passe changé avec succès !\");\n            } else {\n                setPasswordMessage(\"\" + serverMessage);\n            }\n        })\n        .catch((error) => {\n            console.error(\"Erreur:\", error);\n            setPasswordMessage(\" Une erreur réseau est survenue.\");\n        });\n    };\n\n    const navigate = useNavigate();\n\n\n\n    const handleDeleteUser = (targetEmail) => {\n      if (!window.confirm(`Voulez-vous vraiment supprimer l'utilisateur ${targetEmail} ?`)) {\n          return;\n      }\n  \n      const data = new URLSearchParams();\n      data.append('email', targetEmail);\n  \n      fetch(\"http://localhost:8000/DeleteUser.php\", {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          body: data,\n      })\n      .then(response => response.text())\n      .then((data) => {\n          if (data === \"success\") {\n              alert(\"Utilisateur supprimé avec succès !\");\n              setUsers(users.filter(user => user.email !== targetEmail)); // Mise à jour dynamique\n          } else {\n              alert(\" Erreur lors de la suppression !\");\n          }\n      })\n      .catch((error) => {\n          console.error(\" Erreur suppression utilisateur:\", error);\n      });\n    };\n  \n\n\n\n    useEffect(() => {\n      if (isLoggedIn && role === 'admin') {\n        fetchUsers();  // Appel uniquement si l'utilisateur est connecté et admin\n      }\n    }, [isLoggedIn, role]);\n    const fetchUsers = () => {\n      const adminEmail = 'admin@example.com';  // L'email de l'admin\n    \n      console.log(\" Envoi de l'email admin :\", adminEmail);  // Affiche l'email envoyé\n    \n      const data = new URLSearchParams();\n      data.append('admin_email', adminEmail);  // Ajoute l'email dans les données envoyées\n    \n      fetch(\"http://localhost:8000/GetUsers.php\", {\n        method: \"POST\",  // Méthode POST pour envoyer les données\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"  // Formulaire x-www-form-urlencoded\n        },\n        body: data  // Envoi des données avec l'email de l'admin\n      })\n      .then(response => response.json())  // Traite la réponse comme un JSON\n      .then(data => {\n        console.log(\" Réponse brute du serveur:\", data);\n\n        if (data.users && data.attente) {\n          setUsers(data.users);  // Mets à jour la liste des utilisateurs\n          setAttente(data.attente);  // Mets à jour la liste des utilisateurs en attente\n        } else {\n          console.error(\" Erreur : Pas de données valides dans la réponse\");\n        }\n      })\n      .catch(error => {\n        console.error(\" Erreur récupération utilisateurs et liste d'attente:\", error);\n      });\n    };\n\n\n\n    const handleMoveToUser = (email) => {\n      // Demander à l'utilisateur de confirmer l'action\n      if (window.confirm(`Voulez-vous vraiment déplacer ${email} de la liste d'attente vers la liste des utilisateurs ?`)) {\n        \n        // Préparer les données à envoyer\n        const data = new URLSearchParams();\n        data.append('email', email); // L'email de l'utilisateur à déplacer\n        console.log(\"email a transferer:\",email); \n    \n        // Effectuer la requête pour déplacer l'utilisateur\n        fetch(\"http://localhost:8000/MoveToUser.php\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: data\n        })\n        .then(response => response.text())\n        .then(response => {\n          if (response === 'success') {\n            alert(`${email} a été déplacé avec succès vers la liste des utilisateurs.`);\n            // Mettre à jour les listes localement après le déplacement\n            setAttente(attente.filter(user => user.email !== email)); // Enlever de la liste d'attente\n            setUsers([...users, { email, role: 'user' }]); // Ajouter à la liste des utilisateurs\n          } else {\n            alert(\" Une erreur est survenue lors du déplacement.\");\n          }\n        })\n        .catch(error => {\n          console.error(\" Erreur lors du déplacement :\", error);\n        });\n      }\n    };\n    const handleDeviceSelection = (event) => {\n      const { value, checked } = event.target;\n      setSelectedDevices((prevSelectedDevices) => {\n          const updatedDevices = checked\n              ? [...prevSelectedDevices, value]  // Ajoute l'appareil si coché\n              : prevSelectedDevices.filter(device => device !== value);  // Enlève l'appareil si décoché\n          localStorage.setItem('selectedDevices', JSON.stringify(updatedDevices));  // Sauvegarde dans localStorage\n          return updatedDevices;\n      });\n  };\n\n  const handleSubmitDevices = () => {\n      navigate('/', { state: { selectedDevices } });  // Passe les appareils sélectionnés à Home\n  };\n\n  useEffect(() => {\n    if (isLoggedIn && role === 'admin') {\n        fetchMessages();  // Appel pour récupérer les messages\n    }\n}, [isLoggedIn, role]);\n\nconst fetchMessages = () => {\n    fetch('http://localhost:8000/GetMessages.php', {\n        method: 'GET',\n        credentials: 'include',\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('Messages récupérés:', data);\n        if (data.messages) {\n            setMessages(data.messages);  // Met à jour l'état des messages\n        } else {\n            console.error('Erreur lors de la récupération des messages.');\n        }\n    })\n    .catch(error => {\n        console.error('Erreur de récupération des messages:', error);\n    });\n};\n\n\n    \n\n   \n    return (\n      <div className=\"login-container\">\n        {!isLoggedIn ? (\n          <form onSubmit={handleLoginSubmit}>\n            <label>Email :\n              <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n            </label>\n            <br />\n            <label>Mot de passe :\n              <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            </label>\n            <br />\n            {loginError && <p style={{ color: 'red' }}>{loginError}</p>}\n            <button type=\"submit\">Se connecter</button>\n          </form>\n        ) : (\n          <div>\n            <h2>Bienvenue, {userEmail}!</h2>\n            {role === 'admin' ? (\n              <div>\n                <h3>Liste des utilisateurs</h3>\n                <table border=\"1\">\n                  <thead>\n                    <tr>\n                      <th>Email</th>\n                      <th>Rôle</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {users.map((user, index) => (\n                      <tr key={index}>\n                        <td>{user.email}</td>\n                        <td>{user.role}</td>\n                        <td>\n                          <button onClick={() => handleDeleteUser(user.email)}>Supprimer</button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n    \n                <h3>Liste d'attente</h3>\n                <table border=\"1\">\n                  <thead>\n                    <tr>\n                      <th>Email</th>\n                      <th>Rôle</th>\n                      <th>Type</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {attente.map((user, index) => (\n                      <tr key={index}>\n                        <td>{user.email}</td>\n                        <td>{user.role}</td>\n                        <td>{user.type}</td>\n                        <td>\n                          <button onClick={() => handleMoveToUser(user.email)}>Passer à utilisateur</button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <div>\n                    <h3>Messages des utilisateurs</h3>\n                    {messages.length > 0 ? (\n                    <table border=\"1\">\n                      <thead>\n                        <tr>\n                          <th>Email</th>\n                          <th>Message</th>\n                          <th>Date</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {messages.map((message, index) => (\n                          <tr key={index}>\n                            <td>{message.user_email}</td>\n                            <td>{message.message}</td>\n                            <td>{message.sent_at}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <p>Aucun message à afficher.</p>\n                  )}\n              </div>\n\n                <h3>Sélectionnez des appareils à afficher</h3>\n                    <form>\n                        {mockData.connectedDevices.map((device) => (\n                            <div key={device.id}>\n                                <input\n                                    type=\"checkbox\"\n                                    id={`device-${device.id}`}\n                                    value={device.id}\n                                    checked={selectedDevices.includes(device.id)}\n                                    onChange={handleDeviceSelection}\n                                />\n                                <label htmlFor={`device-${device.id}`}>{device.name}</label>\n                            </div>\n                        ))}\n                    </form>\n                    <button onClick={handleSubmitDevices} style={{ marginTop: '20px' }}>\n                      ⬅ Appliquer les modifications\n                    </button>\n                 {/* Nouveau bouton pour retourner à l'accueil */}  \n                  <button onClick={() => navigate('/')} style={{ marginTop: '10px' }}>\n                      ⬅ Retour à l'accueil\n                  </button>\n              </div>\n            ) : (\n              <div>\n                <h3>Modifier votre mot de passe</h3>\n                <form onSubmit={handleChangePasswordSubmit}>\n                  <label>Nouveau mot de passe :\n                    <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\n                  </label>\n                  <br />\n                  <button type=\"submit\">Modifier le mot de passe</button>\n                </form>\n                {/*  Affichage du message de succès ou d'erreur */}\n                  {passwordMessage && (\n                      <p style={{ color: passwordMessage.startsWith('✅') ? 'green' : 'red' }}>\n                          {passwordMessage}\n                      </p>\n                )}\n                {/* Nouveau bouton pour retourner à l'accueil */}\n                <button onClick={() => navigate('/')} style={{ marginTop: '10px' }}>\n                    ⬅ Retour à l'accueil\n                </button>\n                <button onClick={handleLogout}>Se déconnecter</button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n    \n}\n              \nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}