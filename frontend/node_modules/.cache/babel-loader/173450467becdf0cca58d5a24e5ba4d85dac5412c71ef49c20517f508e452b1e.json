{"ast":null,"code":"var _jsxFileName = \"/home/cytech/web6/frontend/src/components/ThermostatControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThermostatControls({\n  device\n}) {\n  _s();\n  const [isPluggedIn, setIsPluggedIn] = useState(false); // Gérer l'état du thermostat\n\n  const handleTempChange = e => {\n    device.targetTemp = parseFloat(e.target.value);\n  };\n  const toggleMode = () => {\n    setIsPluggedIn(!isPluggedIn); // Alterner entre \"Branché\" et \"Chargé\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temperature-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tempRange\",\n      children: \"R\\xE9glage de la temp\\xE9rature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"tempRange\",\n      type: \"range\",\n      min: \"10\",\n      max: \"30\",\n      step: \"0.5\",\n      value: device.targetTemp,\n      onChange: handleTempChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [device.targetTemp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thermostat-mode\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode-button\",\n        onClick: toggleMode,\n        children: isPluggedIn ? 'Chargé' : 'Branché'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(ThermostatControls, \"4DIApovDtBbFQbfH/INdGEu3IJY=\");\n_c = ThermostatControls;\nexport default ThermostatControls;\nvar _c;\n$RefreshReg$(_c, \"ThermostatControls\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ThermostatControls","device","_s","isPluggedIn","setIsPluggedIn","handleTempChange","e","targetTemp","parseFloat","target","value","toggleMode","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","min","max","step","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/cytech/web6/frontend/src/components/ThermostatControls.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ThermostatControls({ device }) {\n  const [isPluggedIn, setIsPluggedIn] = useState(false); // Gérer l'état du thermostat\n\n  const handleTempChange = (e) => {\n    device.targetTemp = parseFloat(e.target.value);\n  };\n\n  const toggleMode = () => {\n    setIsPluggedIn(!isPluggedIn); // Alterner entre \"Branché\" et \"Chargé\"\n  };\n\n  return (\n    <div className=\"temperature-control\">\n      <label htmlFor=\"tempRange\">Réglage de la température</label>\n      <input\n        id=\"tempRange\"\n        type=\"range\"\n        min=\"10\"\n        max=\"30\"\n        step=\"0.5\"\n        value={device.targetTemp}\n        onChange={handleTempChange}\n      />\n      <span>{device.targetTemp}°C</span>\n\n      <div className=\"thermostat-mode\">\n        <button className=\"mode-button\" onClick={toggleMode}>\n          {isPluggedIn ? 'Chargé' : 'Branché'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ThermostatControls;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,kBAAkBA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9BL,MAAM,CAACM,UAAU,GAAGC,UAAU,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAChD,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBP,cAAc,CAAC,CAACD,WAAW,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACEJ,OAAA;IAAKa,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCd,OAAA;MAAOe,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5DnB,OAAA;MACEoB,EAAE,EAAC,WAAW;MACdC,IAAI,EAAC,OAAO;MACZC,GAAG,EAAC,IAAI;MACRC,GAAG,EAAC,IAAI;MACRC,IAAI,EAAC,KAAK;MACVb,KAAK,EAAET,MAAM,CAACM,UAAW;MACzBiB,QAAQ,EAAEnB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFnB,OAAA;MAAAc,QAAA,GAAOZ,MAAM,CAACM,UAAU,EAAC,OAAE;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAElCnB,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9Bd,OAAA;QAAQa,SAAS,EAAC,aAAa;QAACa,OAAO,EAAEd,UAAW;QAAAE,QAAA,EACjDV,WAAW,GAAG,QAAQ,GAAG;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAhCQF,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAkC3B,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}