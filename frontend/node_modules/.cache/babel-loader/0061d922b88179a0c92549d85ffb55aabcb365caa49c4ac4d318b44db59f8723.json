{"ast":null,"code":"var _jsxFileName = \"/home/cytech/web6/frontend/src/components/ThermostatControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThermostatControls({\n  device\n}) {\n  _s();\n  var _device$currentTemp, _device$battery, _device$mode;\n  const [currentTemp, setCurrentTemp] = useState((_device$currentTemp = device === null || device === void 0 ? void 0 : device.currentTemp) !== null && _device$currentTemp !== void 0 ? _device$currentTemp : 20);\n  const [battery, setBattery] = useState((_device$battery = device === null || device === void 0 ? void 0 : device.battery) !== null && _device$battery !== void 0 ? _device$battery : 100);\n  const [mode, setMode] = useState((_device$mode = device === null || device === void 0 ? void 0 : device.mode) !== null && _device$mode !== void 0 ? _device$mode : 'batterie');\n  const [temperatureStarted, setTemperatureStarted] = useState(false);\n  const updateBattery = (mode, battery) => {\n    if (mode === 'batterie') {\n      return battery > 0 ? battery - 0.1 : 0;\n    } else if (mode === 'branché') {\n      return battery < 100 ? battery + 0.1 : 100;\n    }\n    return battery;\n  };\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setTemperatureStarted(true);\n    }, 5000);\n    const interval = setInterval(() => {\n      if (temperatureStarted && typeof device.targetTemp === 'number') {\n        setCurrentTemp(prev => {\n          const diff = device.targetTemp - prev;\n          const step = diff > 0 ? 0.2 : diff < 0 ? -0.1 : 0;\n          return parseFloat((prev + step).toFixed(1));\n        });\n      }\n      setBattery(prev => {\n        const newBattery = updateBattery(mode, prev);\n        localStorage.setItem(`battery-${device.name}`, newBattery.toFixed(1));\n        return parseFloat(newBattery.toFixed(1));\n      });\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [mode, device === null || device === void 0 ? void 0 : device.targetTemp, temperatureStarted, device === null || device === void 0 ? void 0 : device.name]);\n  const handleTempChange = e => {\n    device.targetTemp = parseFloat(e.target.value);\n  };\n\n  // Toggle entre Branché et Chargé\n  const toggleMode = () => {\n    setMode(mode === 'branché' ? 'chargé' : 'branché');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temperature-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tempRange\",\n      children: \"R\\xE9glage de la temp\\xE9rature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"tempRange\",\n      type: \"range\",\n      min: \"10\",\n      max: \"30\",\n      step: \"0.5\",\n      value: device.targetTemp,\n      onChange: handleTempChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [device.targetTemp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"power-mode\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode-button\",\n        onClick: toggleMode,\n        children: mode === 'branché' ? 'Chargé' : 'Branché'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ThermostatControls, \"HbeU8dt4kJ50ZeuCZPH3cNSgYxE=\");\n_c = ThermostatControls;\nexport default ThermostatControls;\nvar _c;\n$RefreshReg$(_c, \"ThermostatControls\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ThermostatControls","device","_s","_device$currentTemp","_device$battery","_device$mode","currentTemp","setCurrentTemp","battery","setBattery","mode","setMode","temperatureStarted","setTemperatureStarted","updateBattery","timeout","setTimeout","interval","setInterval","targetTemp","prev","diff","step","parseFloat","toFixed","newBattery","localStorage","setItem","name","clearInterval","clearTimeout","handleTempChange","e","target","value","toggleMode","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","min","max","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/cytech/web6/frontend/src/components/ThermostatControls.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ThermostatControls({ device }) {\n  const [currentTemp, setCurrentTemp] = useState(device?.currentTemp ?? 20);\n  const [battery, setBattery] = useState(device?.battery ?? 100);\n  const [mode, setMode] = useState(device?.mode ?? 'batterie');\n  const [temperatureStarted, setTemperatureStarted] = useState(false);\n\n  const updateBattery = (mode, battery) => {\n    if (mode === 'batterie') {\n      return battery > 0 ? battery - 0.1 : 0;\n    } else if (mode === 'branché') {\n      return battery < 100 ? battery + 0.1 : 100;\n    }\n    return battery;\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setTemperatureStarted(true);\n    }, 5000);\n\n    const interval = setInterval(() => {\n      if (temperatureStarted && typeof device.targetTemp === 'number') {\n        setCurrentTemp(prev => {\n          const diff = device.targetTemp - prev;\n          const step = diff > 0 ? 0.2 : (diff < 0 ? -0.1 : 0);\n          return parseFloat((prev + step).toFixed(1));\n        });\n      }\n\n      setBattery(prev => {\n        const newBattery = updateBattery(mode, prev);\n        localStorage.setItem(`battery-${device.name}`, newBattery.toFixed(1));\n        return parseFloat(newBattery.toFixed(1));\n      });\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n      clearTimeout(timeout);\n    };\n  }, [mode, device?.targetTemp, temperatureStarted, device?.name]);\n\n  const handleTempChange = (e) => {\n    device.targetTemp = parseFloat(e.target.value);\n  };\n\n  // Toggle entre Branché et Chargé\n  const toggleMode = () => {\n    setMode(mode === 'branché' ? 'chargé' : 'branché');\n  };\n\n  return (\n    <div className=\"temperature-control\">\n      <label htmlFor=\"tempRange\">Réglage de la température</label>\n      <input\n        id=\"tempRange\"\n        type=\"range\"\n        min=\"10\"\n        max=\"30\"\n        step=\"0.5\"\n        value={device.targetTemp}\n        onChange={handleTempChange}\n      />\n      <span>{device.targetTemp}°C</span>\n<br/>\n      <div className=\"power-mode\">\n        <button className=\"mode-button\" onClick={toggleMode}>\n          {mode === 'branché' ? 'Chargé' : 'Branché'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ThermostatControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}