{"ast":null,"code":"var _jsxFileName = \"/home/cytech/web6/frontend/src/components/LockControls.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LockControls({\n  updateDeviceStatus\n}) {\n  _s();\n  const [isLocked, setIsLocked] = useState(true); // Etat pour verrouillé/déverrouillé\n\n  // Fonction pour verrouiller/déverrouiller\n  const toggleLock = () => {\n    setIsLocked(prevState => !prevState);\n  };\n\n  // Mise à jour de l'état dans le composant parent lorsque l'état du cadenas change\n  useEffect(() => {\n    updateDeviceStatus('lock', isLocked ? 'Verrouillé' : 'Déverrouillé');\n  }, [isLocked, updateDeviceStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lock-controls\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"switch\",\n      onClick: toggleLock,\n      style: {\n        marginBottom: '10px'\n      },\n      children: isLocked ? 'Déverrouiller' : 'Verrouiller'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(LockControls, \"2k4rBDKHIl90p/1S1noiLxtb8K8=\");\n_c = LockControls;\nexport default LockControls;\nvar _c;\n$RefreshReg$(_c, \"LockControls\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","LockControls","updateDeviceStatus","_s","isLocked","setIsLocked","toggleLock","prevState","className","children","onClick","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cytech/web6/frontend/src/components/LockControls.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction LockControls({ updateDeviceStatus }) {\n    const [isLocked, setIsLocked] = useState(true); // Etat pour verrouillé/déverrouillé\n\n    // Fonction pour verrouiller/déverrouiller\n    const toggleLock = () => {\n        setIsLocked(prevState => !prevState);\n    };\n\n    // Mise à jour de l'état dans le composant parent lorsque l'état du cadenas change\n    useEffect(() => {\n        updateDeviceStatus('lock', isLocked ? 'Verrouillé' : 'Déverrouillé');\n    }, [isLocked, updateDeviceStatus]);\n\n    return (\n        <div className=\"lock-controls\">\n            <button className=\"switch\" onClick={toggleLock} style={{ marginBottom: '10px' }}>\n                {isLocked ? 'Déverrouiller' : 'Verrouiller'}\n            </button>\n        </div>\n    );\n}\n\nexport default LockControls;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,YAAYA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBD,WAAW,CAACE,SAAS,IAAI,CAACA,SAAS,CAAC;EACxC,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACZI,kBAAkB,CAAC,MAAM,EAAEE,QAAQ,GAAG,YAAY,GAAG,cAAc,CAAC;EACxE,CAAC,EAAE,CAACA,QAAQ,EAAEF,kBAAkB,CAAC,CAAC;EAElC,oBACIF,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1BT,OAAA;MAAQQ,SAAS,EAAC,QAAQ;MAACE,OAAO,EAAEJ,UAAW;MAACK,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,EAC3EL,QAAQ,GAAG,eAAe,GAAG;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACb,EAAA,CApBQF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAsBrB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}